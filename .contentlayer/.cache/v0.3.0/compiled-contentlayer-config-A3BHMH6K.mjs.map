{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../src/lib/contentlayer-adapter.js"],
  "sourcesContent": ["import rehypeCodeTitles from 'rehype-code-titles';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeSlug from 'rehype-slug';\n\nimport { defineDocumentType, makeSource } from './src/lib/contentlayer-adapter';\nimport imageMetadata from '@/lib/image-meta';\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `content/posts/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: true,\n    },\n    slug: {\n      type: 'string',\n      required: true,\n    },\n    date: {\n      type: 'date',\n      required: true,\n    },\n    socialImage: {\n      type: 'string',\n    },\n  \n    redirectFrom: {\n      type: 'list',\n      of: { type: 'string' },\n    },\n  },\n  computedFields: {\n    path: {\n      type: 'string',\n      resolve: (post) => `/posts/${post.slug}`,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Post],\n  mdx: {\n    rehypePlugins: [\n      rehypeSlug, // For generating slugs for headings\n      rehypeCodeTitles, // For adding titles to code blocks\n      [rehypePrism, { ignoreMissing: true }], // For code syntax highlighting\n      imageMetadata, // For adding image metadata (width, height)\n    ],\n  },\n});", "import { allPosts, Post } from 'contentlayer/generated';\nimport {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from 'contentlayer/source-files';\nimport { compareDesc } from 'date-fns';\n\nexport { allPosts, defineDocumentType, defineNestedType, makeSource, Post };\n\nexport const allPostsNewToOld =\n  allPosts?.sort((a, b) => {\n    return compareDesc(new Date(a.date), new Date(b.date));\n  }) || [];"],
  "mappings": ";AAAA,OAAO,sBAAsB;AAC7B,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;;;ACDvB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,mBAAmB;AAIrB,IAAM,mBACX,UAAU,KAAK,CAAC,GAAG,MAAM;AACvB,SAAO,YAAY,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,KAAK,EAAE,IAAI,CAAC;AACvD,CAAC,KAAK,CAAC;;;ADRT,OAAO,mBAAmB;AAEnB,IAAMA,QAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,IACR;AAAA,IAEA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,IACvB;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,UAAU,KAAK;AAAA,IACpC;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAACA,KAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe;AAAA,MACb;AAAA;AAAA,MACA;AAAA;AAAA,MACA,CAAC,aAAa,EAAE,eAAe,KAAK,CAAC;AAAA;AAAA,MACrC;AAAA;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": ["Post"]
}
